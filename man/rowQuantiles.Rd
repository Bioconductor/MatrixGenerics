% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rowQuantiles.R
\name{rowQuantiles}
\alias{rowQuantiles}
\alias{rowQuantiles,matrix-method}
\alias{rowQuantiles,numeric-method}
\alias{rowQuantiles,array-method}
\alias{colQuantiles}
\alias{colQuantiles,matrix-method}
\alias{colQuantiles,numeric-method}
\alias{colQuantiles,array-method}
\title{Calculates the mininum and maximum for each row (column) of a matrix-like object}
\usage{
rowQuantiles(
  x,
  rows = NULL,
  cols = NULL,
  probs = seq(from = 0, to = 1, by = 0.25),
  na.rm = FALSE,
  ...
)

\S4method{rowQuantiles}{matrix}(
  x,
  rows = NULL,
  cols = NULL,
  probs = seq(from = 0, to = 1, by = 0.25),
  na.rm = FALSE,
  type = 7L,
  drop = TRUE
)

\S4method{rowQuantiles}{numeric}(
  x,
  rows = NULL,
  cols = NULL,
  probs = seq(from = 0, to = 1, by = 0.25),
  na.rm = FALSE,
  type = 7L,
  drop = TRUE
)

\S4method{rowQuantiles}{array}(
  x,
  rows = NULL,
  cols = NULL,
  probs = seq(from = 0, to = 1, by = 0.25),
  na.rm = FALSE,
  type = 7L,
  drop = TRUE
)

colQuantiles(
  x,
  rows = NULL,
  cols = NULL,
  probs = seq(from = 0, to = 1, by = 0.25),
  na.rm = FALSE,
  ...
)

\S4method{colQuantiles}{matrix}(
  x,
  rows = NULL,
  cols = NULL,
  probs = seq(from = 0, to = 1, by = 0.25),
  na.rm = FALSE,
  type = 7L,
  drop = TRUE
)

\S4method{colQuantiles}{numeric}(
  x,
  rows = NULL,
  cols = NULL,
  probs = seq(from = 0, to = 1, by = 0.25),
  na.rm = FALSE,
  type = 7L,
  drop = TRUE
)

\S4method{colQuantiles}{array}(
  x,
  rows = NULL,
  cols = NULL,
  probs = seq(from = 0, to = 1, by = 0.25),
  na.rm = FALSE,
  type = 7L,
  drop = TRUE
)
}
\arguments{
\item{x}{An NxK matrix-like object.}

\item{rows, cols}{A \code{\link[base]{vector}} indicating the subset (and/or
columns) to operate over. If \code{\link[base]{NULL}}, no subsetting is done.}

\item{probs}{A numeric vector of J probilities in \[0, 1\].}

\item{na.rm}{If \code{\link[base:logical]{TRUE}}, \code{\link[base]{NA}}s
are excluded first, otherwise not.}

\item{...}{Additional arguments passed to specific methods.}

\item{type}{An integer specifying the type of estimator. See [stats::quantile] for more details.
Note, that this is not a generic srgument and not all implementation of this function 
have to provide it.}

\item{drop}{If `TRUE` a vector is returned if `J == 1`.}
}
\value{
a \code{\link[base]{numeric}} \code{NxJ} (\code{KxJ}) \code{\link{matrix}}, where
  N (K) is the number of rows (columns) for which the J quantiles are calculated.
}
\description{
Calculates the mininum and maximum for each row (column) of a matrix-like object.
}
\details{
The S4 methods for \code{x} of type \code{\link[base]{matrix}} or
\code{\link[base]{numeric}} call \code{matrixStats::\link[matrixStats]{rowQuantiles}}
/ \code{matrixStats::\link[matrixStats]{colQuantiles}}.
}
\examples{
  mat <- matrix(rnorm(15), nrow = 5, ncol = 3)
  mat[2, 1] <- NA
  mat[3, 3] <- Inf
  mat[4, 1] <- 0
  
  print(mat)
  
  rowQuantiles(mat)
  colQuantiles(mat)
  
}
\seealso{
\itemize{
\item \code{matrixStats::\link[matrixStats]{rowQuantiles}()} and
  \code{matrixStats::\link[matrixStats]{colQuantiles}()} which are used when
  the input is a \code{matrix} or \code{numeric} vector.
\item [stats::quantile]
}
}
\keyword{array}
\keyword{iteration}
\keyword{robust}
